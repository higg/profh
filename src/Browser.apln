:Namespace Browser

    _zoomOffset←0                       ⍝ Session offset from configured HtmlRenderer zoom level

    ⍝
    ⍝ Launches given URL (⍵) in configured browser, or in HtmlRenderer if none.
    ⍝
    browse←{
        b←_cfg.browser                  ⍝ Configured browser
        l←b∘_launch ⋄ r←_render         ⍝ Invocation shorthands
        f←l{0<≢b: ⍺⍺ ⍵ ⋄ b ⍵⍵ ⍵}r       ⍝ Choose invocation
        f ⍵                             ⍝ Invoke
    }

    _render←{                           ⍝ Renders given URL in HtmlRenderer
        r←'R'⎕WC'HTMLRenderer'('URL'⍵)  ⍝ R←renderer (launched)
        adjZoom 0                       ⍝ Set zoom level based on configuration, session offset
    }

    ∇ r ← _hra                          ⍝ Indicates if HtmlRenderer is active
        r←×⎕THIS.⎕NC'R'                 ⍝ Check for presence of R
    ∇

    adjZoom←{                           ⍝ Updates zoom level of active renderer
        ~_hra : 0                       ⍝ Ignore of no active renderer
        _zoomOffset+←⍵                  ⍝ Adjust cached offset
        z←_cfg.zoom+_zoomOffset         ⍝ Compute new zoom level 
        R.SetZoomLevel z                ⍝ Apply new zoom level
    }

    ⍝
    ⍝ Builds launch string for given URL (⍵) and browser (⍺).
    ⍝
    _launchStr←{
        b←_browsers                     ⍝ Shorthand
        b/⍨←(2⌷b)≡¨⊂⎕C 3↑##.OS          ⍝ Filter to local OS
        bi←(1⌷b)⍳⊂⍺                     ⍝ Find browser index

        bi>⊃⌽⍴b : 999⎕SIGNAL⍨'Browser "',⍺,'" not supported'

        f←{⊃,/⍵ bi⌷b}                   ⍝ Plucks and fuses cells from browser row
        ##.vtrim (f 5 4),' ',⍵,' ',f 6  ⍝ Build command from prefix/executable/url/suffix
    }

    _launch←{                           ⍝ Launches given URL (⍵) in given browser (⍺)
        s←_cfg.showCmd                  ⍝ Command display setting (undocumented switch)
        f←⎕CMD∘{s: ⎕←⍵ ⋄ ⍵}             ⍝ Glue command execution to optional command display
        f ⍺ _launchStr ⍵                ⍝ Compose lauch string, launch 
    }


    ⍝
    ⍝ Builds matrix of details required for launching supported browsers under
    ⍝ supported operating systems.
    ⍝
    _buildBrowserDetails←{
        ⍝
        ⍝ Build table of OS-sepecific launch prefix/suffix strings.
        ⍝
        ⍝ Note that prefix/suffix strings have trailing/leading space,
        ⍝ respectively.
        ⍝

        ⍝       os      prefix      suffix
        o←⍪     'win'   'start '    ''
        o,←     'mac'   ''          ' </dev/null >/dev/null 2>&1 &'
        o,←     'lin'   ''          ' </dev/null >/dev/null 2>&1 &'

        ⍝
        ⍝ Build table of Browser/OS-specific details.
        ⍝
        ⍝ Note that special characters are escaped for OS shell.
        ⍝

        ⍝       browser     os      appName             execName
        ⍝       -------     --      -------             --------
        b←⍪     'chrome'    'win'   ''                  'chrome'
        b,←     'chrome'    'mac'   'Google\ Chrome'    'Google\ Chrome'
        b,←     'chrome'    'lin'   ''                  'google-chrome'

        b,←     'firefox'   'win'   ''                  'firefox'
        b,←     'firefox'   'mac'   'Firefox'           'firefox'
        b,←     'firefox'   'lin'   ''                  'firefox'

        b,←     'edge'      'win'   ''                  'msedge'
        b,←     'edge'      'mac'   'Microsoft\ Edge'   'Microsoft\ Edge'
        b,←     'edge'      'lin'   ''                  'microsoft-edge'

        b⍪←o[2 3;((1⌷o)⍳2⌷b)]           ⍝ Join OS and browser details

        ⍝
        ⍝ MacOS requires special handling.
        ⍝
        ⍝ We can't use "open" to launch the browsers since it annoyingly strips
        ⍝ hash-params baked into the URL.
        ⍝
        ⍝ Instead, we invoke the browser program directly. In order to do this,
        ⍝ we compose the fully-qualified path to the browser executable. We
        ⍝ assume each is installed in the default location for system
        ⍝ applications (an assumption we'll probably regret one day).
        ⍝
        mi←⍸(2⌷b)≡¨⊂'mac'               ⍝ Find MacOS entries
        p←(⊂'/Applications/'),¨(3 mi⌷b),¨⊂'.app/Contents/MacOS/' ⍝ Build paths
        b[4;mi],⍨←p                     ⍝ Prepend paths to executable names

        b                               ⍝ Return browser details
    }

    _browsers←_buildBrowserDetails ⍬    ⍝ Browser launch details (see above)

    ∇ r ← _cfg                          ⍝ Retrieves application configuration NS
        r←##.Config.Curr
    ∇
:EndNamespace
